{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/spothu3469/JS/RN/upanishad-app/containers/Sloka.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Navigation from \"../components/Navigation\";\nimport SlokaNMeaningCard from \"../components/SlokaNMeaningCard\";\n\nvar SlokaCards = function SlokaCards(_ref) {\n  var id = _ref.id,\n      setVisible = _ref.setVisible,\n      data = _ref.data,\n      nextIndex = _ref.nextIndex;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      meaningType = _useState4[0],\n      setMeaningType = _useState4[1];\n\n  useEffect(function () {\n    setIndex(nextIndex);\n  }, [nextIndex]);\n  return React.createElement(React.Fragment, null, data ? React.createElement(React.Fragment, null, React.createElement(Navigation, {\n    setVisible: setVisible,\n    id: data[index].id,\n    leftClick: function leftClick() {\n      if (index > 0) {\n        setIndex(index - 1);\n        setMeaningType(undefined);\n      } else {\n        null;\n      }\n    },\n    rightClick: function rightClick() {\n      if (index < data.length - 1) {\n        setIndex(index + 1);\n        setMeaningType(undefined);\n      } else {\n        null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(SlokaNMeaningCard, {\n    sloka: data[index].sloka,\n    meaningType: meaningType,\n    setMeaningType: setMeaningType,\n    wordToWordMeaning: data[index].wordByWordMeaning,\n    meaning: data[index].meaning,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })))) : React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10\n  }\n});\nexport default SlokaCards;","map":{"version":3,"sources":["/home/spothu3469/JS/RN/upanishad-app/containers/Sloka.js"],"names":["React","useState","useEffect","Navigation","SlokaNMeaningCard","SlokaCards","id","setVisible","data","nextIndex","index","setIndex","meaningType","setMeaningType","undefined","length","styles","container","sloka","wordByWordMeaning","meaning","StyleSheet","create","marginHorizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,UAAP;AACA,OAAOC,iBAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyC;AAAA,MAAtCC,EAAsC,QAAtCA,EAAsC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBAChCR,QAAQ,CAAC,CAAD,CADwB;AAAA;AAAA,MACnDS,KADmD;AAAA,MAC5CC,QAD4C;;AAAA,mBAEpBV,QAAQ,EAFY;AAAA;AAAA,MAEnDW,WAFmD;AAAA,MAEtCC,cAFsC;;AAG1DX,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAACF,SAAD,CAAR;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGA,SACE,0CACGD,IAAI,GACH,0CACE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAED,UADd;AAEE,IAAA,EAAE,EAAEC,IAAI,CAACE,KAAD,CAAJ,CAAYJ,EAFlB;AAGE,IAAA,SAAS,EAAE,qBAAM;AACf,UAAII,KAAK,GAAG,CAAZ,EAAe;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,QAAAA,cAAc,CAACC,SAAD,CAAd;AACD,OAHD,MAGO;AACL;AACD;AACF,KAVH;AAWE,IAAA,UAAU,EAAE,sBAAM;AAChB,UAAIJ,KAAK,GAAGF,IAAI,CAACO,MAAL,GAAc,CAA1B,EAA6B;AAC3BJ,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,QAAAA,cAAc,CAACC,SAAD,CAAd;AACD,OAHD,MAGO;AACL;AACD;AACF,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAqBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEE,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAET,IAAI,CAACE,KAAD,CAAJ,CAAYQ,KADrB;AAEE,IAAA,WAAW,EAAEN,WAFf;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAIE,IAAA,iBAAiB,EAAEL,IAAI,CAACE,KAAD,CAAJ,CAAYS,iBAJjC;AAKE,IAAA,OAAO,EAAEX,IAAI,CAACE,KAAD,CAAJ,CAAYU,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CArBF,CADG,GAmCH,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCJ,CADF;AAyCD,CA/CD;;AAiDA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,gBAAgB,EAAE;AADT;AADoB,CAAlB,CAAf;AAMA,eAAelB,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, ScrollView } from \"react-native\";\nimport Navigation from \"../components/Navigation\";\nimport SlokaNMeaningCard from \"../components/SlokaNMeaningCard\";\n\nconst SlokaCards = ({ id, setVisible, data, nextIndex }) => {\n  const [index, setIndex] = useState(0);\n  const [meaningType, setMeaningType] = useState();\n  useEffect(() => {\n    setIndex(nextIndex);\n  }, [nextIndex]);\n  return (\n    <>\n      {data ? (\n        <>\n          <Navigation\n            setVisible={setVisible}\n            id={data[index].id}\n            leftClick={() => {\n              if (index > 0) {\n                setIndex(index - 1);\n                setMeaningType(undefined);\n              } else {\n                null;\n              }\n            }}\n            rightClick={() => {\n              if (index < data.length - 1) {\n                setIndex(index + 1);\n                setMeaningType(undefined);\n              } else {\n                null;\n              }\n            }}\n          />\n          <ScrollView style={styles.container}>\n            <ScrollView>\n              <SlokaNMeaningCard\n                sloka={data[index].sloka}\n                meaningType={meaningType}\n                setMeaningType={setMeaningType}\n                wordToWordMeaning={data[index].wordByWordMeaning}\n                meaning={data[index].meaning}\n              />\n            </ScrollView>\n          </ScrollView>\n        </>\n      ) : (\n        <ScrollView></ScrollView>\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n  },\n});\n\nexport default SlokaCards;\n"]},"metadata":{},"sourceType":"module"}