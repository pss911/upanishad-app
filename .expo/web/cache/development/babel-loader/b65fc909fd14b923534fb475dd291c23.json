{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/spothu3469/upanishad-app/components/SlokaNMeaningCard.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../assets/Colors.json\";\n\nvar SlokaNMeaningCard = function SlokaNMeaningCard(_ref) {\n  var sloka = _ref.sloka,\n      wordToWordMeaning = _ref.wordToWordMeaning,\n      meaning = _ref.meaning,\n      meaningType = _ref.meaningType,\n      setMeaningType = _ref.setMeaningType;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.slokaCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.slokaText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, sloka)), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: function onPress() {\n      return setMeaningType(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: meaningType == true ? [styles.optionText, styles.activeOption] : styles.optionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, \"\\u0C2D\\u0C3E\\u0C35\\u0C2E\\u0C41\"))), wordToWordMeaning ? React.createElement(View, {\n    style: styles.option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: function onPress() {\n      return setMeaningType(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: meaningType == false ? [styles.optionText, styles.activeOption] : styles.optionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"\\u0C2A\\u0C4D\\u0C30\\u0C24\\u0C3F \\u0C2A\\u0C26\\u0C3E\\u0C30\\u0C4D\\u0C27\\u0C2E\\u0C41\"))) : null)), React.createElement(View, {\n    style: styles.meaningCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.meaningText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, meaningType === true ? meaning : null, meaningType === false ? wordToWordMeaning : null)));\n};\n\nvar styles = StyleSheet.create({\n  slokaCard: {\n    borderRadius: 10,\n    backgroundColor: Colors.light,\n    paddingTop: 30\n  },\n  slokaText: {\n    paddingTop: 5,\n    lineHeight: 50,\n    fontSize: 19,\n    fontFamily: \"Telugu1\",\n    textAlign: \"center\",\n    color: Colors.dark,\n    paddingHorizontal: 15,\n    paddingBottom: 35\n  },\n  optionsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  options: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    position: \"absolute\",\n    top: -25\n  },\n  option: {\n    borderRadius: 10,\n    marginHorizontal: 5,\n    height: 45,\n    backgroundColor: Colors.darkAccent,\n    width: 130\n  },\n  optionText: {\n    lineHeight: 45,\n    textAlign: \"center\",\n    fontFamily: \"Telugu1\",\n    fontSize: 20,\n    color: Colors.buttonForeGround\n  },\n  activeOption: {\n    color: Colors.active,\n    textDecorationLine: \"underline\"\n  },\n  meaningCard: {\n    marginTop: 35,\n    marginBottom: 10,\n    backgroundColor: Colors.light,\n    padding: 15,\n    borderRadius: 10\n  },\n  meaningText: {\n    paddingTop: 5,\n    lineHeight: 50,\n    fontSize: 20,\n    fontFamily: \"Telugu1\",\n    textAlign: \"center\",\n    color: Colors.dark\n  }\n});\nexport default SlokaNMeaningCard;","map":{"version":3,"sources":["/home/spothu3469/upanishad-app/components/SlokaNMeaningCard.js"],"names":["React","Colors","SlokaNMeaningCard","sloka","wordToWordMeaning","meaning","meaningType","setMeaningType","styles","slokaCard","slokaText","optionsContainer","options","option","optionText","activeOption","meaningCard","meaningText","StyleSheet","create","borderRadius","backgroundColor","light","paddingTop","lineHeight","fontSize","fontFamily","textAlign","color","dark","paddingHorizontal","paddingBottom","display","flexDirection","alignItems","justifyContent","position","top","marginHorizontal","height","darkAccent","width","buttonForeGround","active","textDecorationLine","marginTop","marginBottom","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMpB;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,iBAII,QAJJA,iBAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,cACI,QADJA,cACI;AACJ,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,KAAhC,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,cAAc,CAAC,IAAD,CAApB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EACHD,WAAW,IAAI,IAAf,GACI,CAACE,MAAM,CAACM,UAAR,EAAoBN,MAAM,CAACO,YAA3B,CADJ,GAEIP,MAAM,CAACM,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJF,CADF,CADF,EAiBGV,iBAAiB,GAChB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,cAAc,CAAC,KAAD,CAApB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EACHD,WAAW,IAAI,KAAf,GACI,CAACE,MAAM,CAACM,UAAR,EAAoBN,MAAM,CAACO,YAA3B,CADJ,GAEIP,MAAM,CAACM,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAJF,CADF,CADgB,GAiBd,IAlCN,CADF,CAJF,EA2CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,WAAW,KAAK,IAAhB,GAAuBD,OAAvB,GAAiC,IADpC,EAEGC,WAAW,KAAK,KAAhB,GAAwBF,iBAAxB,GAA4C,IAF/C,CADF,CA3CJ,CADF;AAqDD,CA5DD;;AA8DA,IAAMI,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,eAAe,EAAEpB,MAAM,CAACqB,KAFf;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/Bb,EAAAA,SAAS,EAAE;AACTa,IAAAA,UAAU,EAAE,CADH;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,QAAQ,EAAE,EAHD;AAITC,IAAAA,UAAU,EAAE,SAJH;AAKTC,IAAAA,SAAS,EAAE,QALF;AAMTC,IAAAA,KAAK,EAAE3B,MAAM,CAAC4B,IANL;AAOTC,IAAAA,iBAAiB,EAAE,EAPV;AAQTC,IAAAA,aAAa,EAAE;AARN,GANoB;AAgB/BpB,EAAAA,gBAAgB,EAAE;AAChBqB,IAAAA,OAAO,EAAE,MADO;AAEhBC,IAAAA,aAAa,EAAE,KAFC;AAGhBC,IAAAA,UAAU,EAAE,QAHI;AAIhBC,IAAAA,cAAc,EAAE;AAJA,GAhBa;AAsB/BvB,EAAAA,OAAO,EAAE;AACPoB,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPG,IAAAA,QAAQ,EAAE,UAHH;AAIPC,IAAAA,GAAG,EAAE,CAAC;AAJC,GAtBsB;AA4B/BxB,EAAAA,MAAM,EAAE;AACNO,IAAAA,YAAY,EAAE,EADR;AAENkB,IAAAA,gBAAgB,EAAE,CAFZ;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINlB,IAAAA,eAAe,EAAEpB,MAAM,CAACuC,UAJlB;AAKNC,IAAAA,KAAK,EAAE;AALD,GA5BuB;AAmC/B3B,EAAAA,UAAU,EAAE;AACVU,IAAAA,UAAU,EAAE,EADF;AAEVG,IAAAA,SAAS,EAAE,QAFD;AAGVD,IAAAA,UAAU,EAAE,SAHF;AAIVD,IAAAA,QAAQ,EAAE,EAJA;AAKVG,IAAAA,KAAK,EAAE3B,MAAM,CAACyC;AALJ,GAnCmB;AA0C/B3B,EAAAA,YAAY,EAAE;AAAEa,IAAAA,KAAK,EAAE3B,MAAM,CAAC0C,MAAhB;AAAwBC,IAAAA,kBAAkB,EAAE;AAA5C,GA1CiB;AA2C/B5B,EAAAA,WAAW,EAAE;AACX6B,IAAAA,SAAS,EAAE,EADA;AAEXC,IAAAA,YAAY,EAAE,EAFH;AAGXzB,IAAAA,eAAe,EAAEpB,MAAM,CAACqB,KAHb;AAIXyB,IAAAA,OAAO,EAAE,EAJE;AAKX3B,IAAAA,YAAY,EAAE;AALH,GA3CkB;AAkD/BH,EAAAA,WAAW,EAAE;AACXM,IAAAA,UAAU,EAAE,CADD;AAEXC,IAAAA,UAAU,EAAE,EAFD;AAGXC,IAAAA,QAAQ,EAAE,EAHC;AAIXC,IAAAA,UAAU,EAAE,SAJD;AAKXC,IAAAA,SAAS,EAAE,QALA;AAMXC,IAAAA,KAAK,EAAE3B,MAAM,CAAC4B;AANH;AAlDkB,CAAlB,CAAf;AA4DA,eAAe3B,iBAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Colors from \"../assets/Colors.json\";\n\nconst SlokaNMeaningCard = ({\n  sloka,\n  wordToWordMeaning,\n  meaning,\n  meaningType,\n  setMeaningType,\n}) => {\n  return (\n    <View>\n      <View style={styles.slokaCard}>\n        <Text style={styles.slokaText}>{sloka}</Text>\n      </View>\n      <View style={styles.optionsContainer}>\n        <View style={styles.options}>\n          <View style={styles.option}>\n            <TouchableOpacity\n              activeOpacity={0.7}\n              onPress={() => setMeaningType(true)}\n            >\n              <Text\n                style={\n                  meaningType == true\n                    ? [styles.optionText, styles.activeOption]\n                    : styles.optionText\n                }\n              >\n                భావము\n              </Text>\n            </TouchableOpacity>\n          </View>\n          {wordToWordMeaning ? (\n            <View style={styles.option}>\n              <TouchableOpacity\n                activeOpacity={0.7}\n                onPress={() => setMeaningType(false)}\n              >\n                <Text\n                  style={\n                    meaningType == false\n                      ? [styles.optionText, styles.activeOption]\n                      : styles.optionText\n                  }\n                >\n                  ప్రతి పదార్ధము\n                </Text>\n              </TouchableOpacity>\n            </View>\n          ) : null}\n        </View>\n      </View>\n      {\n        <View style={styles.meaningCard}>\n          <Text style={styles.meaningText}>\n            {meaningType === true ? meaning : null}\n            {meaningType === false ? wordToWordMeaning : null}\n          </Text>\n        </View>\n      }\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  slokaCard: {\n    borderRadius: 10,\n    backgroundColor: Colors.light,\n    paddingTop: 30,\n  },\n  slokaText: {\n    paddingTop: 5,\n    lineHeight: 50,\n    fontSize: 19,\n    fontFamily: \"Telugu1\",\n    textAlign: \"center\",\n    color: Colors.dark,\n    paddingHorizontal: 15,\n    paddingBottom: 35,\n  },\n  optionsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  options: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    position: \"absolute\",\n    top: -25,\n  },\n  option: {\n    borderRadius: 10,\n    marginHorizontal: 5,\n    height: 45,\n    backgroundColor: Colors.darkAccent,\n    width: 130,\n  },\n  optionText: {\n    lineHeight: 45,\n    textAlign: \"center\",\n    fontFamily: \"Telugu1\",\n    fontSize: 20,\n    color: Colors.buttonForeGround,\n  },\n  activeOption: { color: Colors.active, textDecorationLine: \"underline\" },\n  meaningCard: {\n    marginTop: 35,\n    marginBottom: 10,\n    backgroundColor: Colors.light,\n    padding: 15,\n    borderRadius: 10,\n  },\n  meaningText: {\n    paddingTop: 5,\n    lineHeight: 50,\n    fontSize: 20,\n    fontFamily: \"Telugu1\",\n    textAlign: \"center\",\n    color: Colors.dark,\n  },\n});\n\nexport default SlokaNMeaningCard;\n"]},"metadata":{},"sourceType":"module"}