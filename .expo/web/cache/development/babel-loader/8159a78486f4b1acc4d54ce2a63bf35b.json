{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/_11spothukuchi/JS/Apps/upanishad-app/screens/Sloka.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Footer from \"../components/Footer\";\nimport SlokaContainer from \"../containers/Sloka\";\nimport ModalPopup from \"../components/ModalPopup\";\nimport Colors from \"../assets/Colors.json\";\n\nvar Sloka = function Sloka(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    import(\"../assets/data/slokas/\").then(function (res) {\n      return setData(res.default[navigation.getParam(\"id\")]);\n    });\n  }, [navigation]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      index = _useState8[0],\n      setIndex = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  function isInt(n) {\n    return n % 1 === 0;\n  }\n\n  var handleSubmit = function handleSubmit() {\n    if (isNaN(Number(text))) {\n      setError(\"That is Not a Number. Please Enter A Valid Number.\");\n      setTimeout(function () {\n        setError(\"\");\n      }, 3000);\n    } else if (!isInt(Number(text))) {\n      setError(\"The Number Can't be a Decimal.\");\n      setTimeout(function () {\n        setError(\"\");\n      }, 3000);\n    } else if (Number(text) <= 0 || Number(text) > data.length) {\n      setError(\"The Number Must be Between 1 and \" + data.length + \".\");\n      setTimeout(function () {\n        setError(\"\");\n      }, 3000);\n    } else {\n      setIndex(Number(text) - 1);\n      handleClose();\n    }\n  };\n\n  var handleClose = function handleClose() {\n    setText(\"\");\n    setVisible(false);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, data ? React.createElement(ModalPopup, {\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Telugu2\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Enter a Sloka # \", \"(1 to \" + data.length + \")\"), React.createElement(TextInput, {\n    autoFocus: true,\n    onChangeText: setText,\n    value: text,\n    keyboardType: \"numeric\",\n    style: error ? [styles.textInput, {\n      marginBottom: 2\n    }] : styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), error ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }\n  }, error) : null, React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleClose,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Close\")), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Submit\")))) : null, React.createElement(SlokaContainer, {\n    setVisible: setVisible,\n    id: navigation.getParam(\"id\"),\n    data: data,\n    nextIndex: index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: Colors.darkAccent,\n    padding: 10,\n    marginHorizontal: 10,\n    width: 100,\n    borderRadius: 10\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.buttonForeGround,\n    fontSize: 16,\n    fontFamily: \"Telugu2\"\n  },\n  textInput: {\n    borderWidth: 2,\n    borderColor: \"#000\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    fontFamily: \"Telugu2\"\n  },\n  error: {\n    fontSize: 12,\n    color: \"#ff0000\",\n    marginBottom: 10\n  }\n});\nexport default Sloka;","map":{"version":3,"sources":["/home/_11spothukuchi/JS/Apps/upanishad-app/screens/Sloka.js"],"names":["React","useState","useEffect","Footer","SlokaContainer","ModalPopup","Colors","Sloka","navigation","then","res","setData","default","getParam","visible","setVisible","text","setText","data","index","setIndex","error","setError","isInt","n","handleSubmit","isNaN","Number","setTimeout","length","handleClose","flex","fontFamily","fontSize","styles","textInput","marginBottom","display","flexDirection","justifyContent","button","buttonText","StyleSheet","create","backgroundColor","darkAccent","padding","marginHorizontal","width","borderRadius","textAlign","color","buttonForeGround","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Footer from \"../components/Footer\";\nimport SlokaContainer from \"../containers/Sloka\";\nimport ModalPopup from \"../components/ModalPopup\";\nimport Colors from \"../assets/Colors.json\";\n\nconst Sloka = ({ navigation }) => {\n  useEffect(() => {\n    import(\"../assets/data/slokas/\").then((res) =>\n      setData(res.default[navigation.getParam(\"id\")])\n    );\n  }, [navigation]);\n\n  const [visible, setVisible] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [data, setData] = useState();\n  const [index, setIndex] = useState(0);\n  const [error, setError] = useState();\n\n  function isInt(n) {\n    return n % 1 === 0;\n  }\n\n  const handleSubmit = () => {\n    if (isNaN(Number(text))) {\n      setError(\"That is Not a Number. Please Enter A Valid Number.\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else if (!isInt(Number(text))) {\n      setError(\"The Number Can't be a Decimal.\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else if (Number(text) <= 0 || Number(text) > data.length) {\n      setError(`The Number Must be Between 1 and ${data.length}.`);\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else {\n      setIndex(Number(text) - 1);\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    setText(\"\");\n    setVisible(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {data ? (\n        <ModalPopup visible={visible}>\n          <Text style={{ fontFamily: \"Telugu2\", fontSize: 15 }}>\n            Enter a Sloka # {`(1 to ${data.length})`}\n          </Text>\n          <TextInput\n            autoFocus={true}\n            onChangeText={setText}\n            value={text}\n            keyboardType=\"numeric\"\n            style={\n              error ? [styles.textInput, { marginBottom: 2 }] : styles.textInput\n            }\n          />\n          {error ? <Text style={styles.error}>{error}</Text> : null}\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity onPress={handleClose} style={styles.button}>\n              <Text style={styles.buttonText}>Close</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleSubmit} style={styles.button}>\n              <Text style={styles.buttonText}>Submit</Text>\n            </TouchableOpacity>\n          </View>\n        </ModalPopup>\n      ) : null}\n      <SlokaContainer\n        setVisible={setVisible}\n        id={navigation.getParam(\"id\")}\n        data={data}\n        nextIndex={index}\n      />\n      {/* <Footer /> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: Colors.darkAccent,\n    padding: 10,\n    marginHorizontal: 10,\n    width: 100,\n    borderRadius: 10,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.buttonForeGround,\n    fontSize: 16,\n    fontFamily: \"Telugu2\",\n  },\n  textInput: {\n    borderWidth: 2,\n    borderColor: \"#000\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    fontFamily: \"Telugu2\",\n  },\n  error: {\n    fontSize: 12,\n    color: \"#ff0000\",\n    marginBottom: 10,\n  },\n});\n\nexport default Sloka;\n"]},"metadata":{},"sourceType":"module"}