{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Footer from\"../components/Footer\";import SlokaContainer from\"../containers/Sloka\";import ModalPopup from\"../components/ModalPopup\";import Colors from\"../assets/Colors.json\";var Sloka=function Sloka(_ref){var navigation=_ref.navigation;useEffect(function(){import(\"../assets/data/slokas/\").then(function(res){return setData(res.default[navigation.getParam(\"id\")]);});},[navigation]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),index=_useState8[0],setIndex=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];function isInt(n){return n%1===0;}var handleSubmit=function handleSubmit(){if(isNaN(Number(text))){setError(\"That is Not a Number. Please Enter A Valid Number.\");setTimeout(function(){setError(\"\");},3000);}else if(!isInt(Number(text))){setError(\"The Number Can't be a Decimal.\");setTimeout(function(){setError(\"\");},3000);}else if(Number(text)<=0||Number(text)>data.length){setError(\"The Number Must be Between 1 and \"+data.length+\".\");setTimeout(function(){setError(\"\");},3000);}else{setIndex(Number(text)-1);handleClose();}};var handleClose=function handleClose(){setText(\"\");setVisible(false);};return React.createElement(View,{style:{flex:1}},data?React.createElement(ModalPopup,{visible:visible},React.createElement(Text,{style:{fontFamily:\"Telugu2\",fontSize:15}},\"Enter a Sloka # \",\"(1 to \"+data.length+\")\"),React.createElement(TextInput,{autoFocus:true,onChangeText:setText,value:text,keyboardType:\"numeric\",style:error?[styles.textInput,{marginBottom:2}]:styles.textInput}),error?React.createElement(Text,{style:styles.error},error):null,React.createElement(View,{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}},React.createElement(TouchableOpacity,{onPress:handleClose,style:styles.button},React.createElement(Text,{style:styles.buttonText},\"Close\")),React.createElement(TouchableOpacity,{onPress:handleSubmit,style:styles.button},React.createElement(Text,{style:styles.buttonText},\"Submit\")))):null,React.createElement(SlokaContainer,{setVisible:setVisible,id:navigation.getParam(\"id\"),data:data,nextIndex:index}));};var styles=StyleSheet.create({button:{backgroundColor:Colors.darkAccent,padding:10,marginHorizontal:10,width:100,borderRadius:10},buttonText:{textAlign:\"center\",color:Colors.buttonForeGround,fontSize:16,fontFamily:\"Telugu2\"},textInput:{borderWidth:2,borderColor:\"#000\",padding:10,borderRadius:10,marginBottom:10,fontFamily:\"Telugu2\"},error:{fontSize:12,color:\"#ff0000\",marginBottom:10}});export default Sloka;","map":{"version":3,"sources":["/home/_11spothukuchi/JS/Apps/upanishad-app/screens/Sloka.js"],"names":["React","useState","useEffect","Footer","SlokaContainer","ModalPopup","Colors","Sloka","navigation","then","res","setData","default","getParam","visible","setVisible","text","setText","data","index","setIndex","error","setError","isInt","n","handleSubmit","isNaN","Number","setTimeout","length","handleClose","flex","fontFamily","fontSize","styles","textInput","marginBottom","display","flexDirection","justifyContent","button","buttonText","StyleSheet","create","backgroundColor","darkAccent","padding","marginHorizontal","width","borderRadius","textAlign","color","buttonForeGround","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Footer from \"../components/Footer\";\nimport SlokaContainer from \"../containers/Sloka\";\nimport ModalPopup from \"../components/ModalPopup\";\nimport Colors from \"../assets/Colors.json\";\n\nconst Sloka = ({ navigation }) => {\n  useEffect(() => {\n    import(\"../assets/data/slokas/\").then((res) =>\n      setData(res.default[navigation.getParam(\"id\")])\n    );\n  }, [navigation]);\n\n  const [visible, setVisible] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [data, setData] = useState();\n  const [index, setIndex] = useState(0);\n  const [error, setError] = useState();\n\n  function isInt(n) {\n    return n % 1 === 0;\n  }\n\n  const handleSubmit = () => {\n    if (isNaN(Number(text))) {\n      setError(\"That is Not a Number. Please Enter A Valid Number.\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else if (!isInt(Number(text))) {\n      setError(\"The Number Can't be a Decimal.\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else if (Number(text) <= 0 || Number(text) > data.length) {\n      setError(`The Number Must be Between 1 and ${data.length}.`);\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    } else {\n      setIndex(Number(text) - 1);\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    setText(\"\");\n    setVisible(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {data ? (\n        <ModalPopup visible={visible}>\n          <Text style={{ fontFamily: \"Telugu2\", fontSize: 15 }}>\n            Enter a Sloka # {`(1 to ${data.length})`}\n          </Text>\n          <TextInput\n            autoFocus={true}\n            onChangeText={setText}\n            value={text}\n            keyboardType=\"numeric\"\n            style={\n              error ? [styles.textInput, { marginBottom: 2 }] : styles.textInput\n            }\n          />\n          {error ? <Text style={styles.error}>{error}</Text> : null}\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity onPress={handleClose} style={styles.button}>\n              <Text style={styles.buttonText}>Close</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleSubmit} style={styles.button}>\n              <Text style={styles.buttonText}>Submit</Text>\n            </TouchableOpacity>\n          </View>\n        </ModalPopup>\n      ) : null}\n      <SlokaContainer\n        setVisible={setVisible}\n        id={navigation.getParam(\"id\")}\n        data={data}\n        nextIndex={index}\n      />\n      {/* <Footer /> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: Colors.darkAccent,\n    padding: 10,\n    marginHorizontal: 10,\n    width: 100,\n    borderRadius: 10,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.buttonForeGround,\n    fontSize: 16,\n    fontFamily: \"Telugu2\",\n  },\n  textInput: {\n    borderWidth: 2,\n    borderColor: \"#000\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    fontFamily: \"Telugu2\",\n  },\n  error: {\n    fontSize: 12,\n    color: \"#ff0000\",\n    marginBottom: 10,\n  },\n});\n\nexport default Sloka;\n"]},"metadata":{},"sourceType":"module"}